-- Do not manually edit this file, it was auto-generated by dillonkearns/elm-graphql
-- https://github.com/dillonkearns/elm-graphql


module Shops.Query exposing (..)

import Graphql.Internal.Builder.Argument as Argument exposing (Argument)
import Graphql.Internal.Builder.Object as Object
import Graphql.Internal.Encode as Encode exposing (Value)
import Graphql.Operation exposing (RootMutation, RootQuery, RootSubscription)
import Graphql.OptionalArgument exposing (OptionalArgument(..))
import Graphql.SelectionSet exposing (SelectionSet)
import Json.Decode as Decode exposing (Decoder)
import Shops.InputObject
import Shops.Interface
import Shops.Object
import Shops.Scalar
import Shops.ScalarCodecs
import Shops.Union


allShops :
    SelectionSet decodesTo Shops.Object.ShopType
    -> SelectionSet (List decodesTo) RootQuery
allShops object_ =
    Object.selectionForCompositeField "allShops" [] object_ (identity >> Decode.list)


allProducts :
    SelectionSet decodesTo Shops.Object.ProductType
    -> SelectionSet (List decodesTo) RootQuery
allProducts object_ =
    Object.selectionForCompositeField "allProducts" [] object_ (identity >> Decode.list)
